{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO2y9BL3X2YmJ1bY2+Wsk42"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#"],"metadata":{"id":"61WqH2plou8i"}},{"cell_type":"code","source":[],"metadata":{"id":"lV86BO7gvbdS"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TFcND40ZravZ","executionInfo":{"status":"error","timestamp":1703623763276,"user_tz":-60,"elapsed":1195,"user":{"displayName":"Kier","userId":"08659815375495109439"}},"colab":{"base_uri":"https://localhost:8080/","height":399},"outputId":"e149ce32-d73a-4068-de75-d4a0bcfa017e"},"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-ad6702b0e3ab>\u001b[0m in \u001b[0;36m<cell line: 21>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mgeopandas\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mgpd\u001b[0m         \u001b[0;31m# pour la spatialisation des données\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpyplot\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mplt\u001b[0m \u001b[0;31m# pour les graphes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 21\u001b[0;31m \u001b[0;32mimport\u001b[0m \u001b[0mcontextily\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mctx\u001b[0m        \u001b[0;31m# pour l'utilisation de cartes géographiques\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     22\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     23\u001b[0m \u001b[0;31m#------------------------------------------------------------------------------------------------\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'contextily'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"],"errorDetails":{"actions":[{"action":"open_url","actionText":"Open Examples","url":"/notebooks/snippets/importing_libraries.ipynb"}]}}],"source":["#code de :\n","#NOM : de Castro\n","#PRENOM : Kier\n","#GROUPE : TP1A\n","\n","################################################################################################\n","# FONCTIONS SPECIFIQUES\n","# Les fonctions à coder selon l'échancier donné dans le document SAE15-Présentation.ipynb\n","#################################################################################################\n","\n","#------------------------------------------------------------------------------------------------\n","# importations des modules utiles\n","#\n","# attention : geopandas et contextily doivent être installés avant l'importation\n","# utiliser pour cela !pip install ... dans le Notebook principal\n","#\n","import pandas as pd             # pour la mise en forme, l'analyse et la publication\n","import datetime as dt           # pour la détermination de la date\n","import geopandas as gpd         # pour la spatialisation des données\n","import matplotlib.pyplot as plt # pour les graphes\n","import contextily as ctx        # pour l'utilisation de cartes géographiques\n","\n","#------------------------------------------------------------------------------------------------\n","# fonction qui retourne le taux de disponibilité des stands (en %)\n","def availableDocksRate(stations_df) :\n","\n","    velos_valables = stations_df['numBikesAvailable']\n","    stands_dispo = stations_df['numDocksAvailable']\n","    rate=0\n","    rate = stands_dispo / (velos_valables + stands_dispo ) * 100\n","\n","    return rate\n","#------------------------------------------------------------------------------------------------\n","# fonction qui retourne le taux de disponibilité des vélos (en %)\n","def availableBikesRate(stations_df) :\n","\n","    velos_valables = stations_df['numBikesAvailable']\n","    stands_dispo = stations_df['numDocksAvailable']\n","    rate=0\n","    rate = velos_valables /(velos_valables + stands_dispo ) * 100\n","\n","    return rate\n","\n","#------------------------------------------------------------------------------------------------\n","# fonction qui retourne la date la plus récente de la mise à jour des données dynamiques\n","def getLatestDate(stations_df) :\n","\n","    date = stations_df['last_reported']\n","    date = date.max()\n","\n","    return date\n","\n","\n","#------------------------------------------------------------------------------------------------\n","# fonction qui retourne les mesures statistiques d'une clé du DataFrame de stations\n","def stationStatistics(stations_df_key):\n","\n","    ligne = stations_df_key\n","    liste = [{\n","        'total': ligne.sum(),\n","        'min' : ligne.min(),\n","        'max' : ligne.max()}]\n","    stats = pd.DataFrame(liste)\n","\n","    return stats\n","\n","#------------------------------------------------------------------------------------------------\n","# fonction qui exporte au format HTML le DataFrame des mesures statistiques\n","\n","def exportStatistics(stats_df, filename) :\n","\n","\n","\n","    f=open(\"/content/drive/My Drive/Colab Notebooks/SAE15/tools/\"+ filename ,\"w\") #cette ligne ne modifie pas un fichier mais cree un nouveau fichier contenant notre html\n","    f.write(stats_df.to_html())\n","\n","\n","\n","    return\n","\n","#------------------------------------------------------------------------------------------------\n","# fonction qui affiche et exporte la carte des stations Vélibs géolocalisées\n","def exportCityMap(geo_stations, marker_size, marker_color, title, date=None, filename=None) :\n","\n","    # figure et axes\n","    f, axes = plt.subplots(1, figsize=(15,15))\n","\n","\n","\n","    # conversion des coordonnées dans le système approprié\n","    geo_data_ = gpd.GeoDataFrame(geo_stations, crs=\"EPSG:4326\", geometry=geom)\n","\n","    # affichage en fonction des variables passées en argument\n","    geo_data_with_map.plot(geo_stations.num_docks_available, markersize=marker_size*geo_stations.num_docks_available, cmap=marker_color, ax=axes);\n","\n","    # effacement des axes gradués\n","    axes.set_axis_off()\n","\n","\n","    # ajout du fond de carte correspondant aux coordonnées géographiques des stations\n","    ctx.add_basemap(axes)\n","\n","\n","    # affichage du titre avec la date de mise à jour\n","    plt.title(\"Carte stations disponible(MAJ) : \" + date, loc = 'center')\n","\n","\n","    # sauvegarde de la carte sur le Drive\n","    plt.savefig('/content/drive/My Drive/Colab Notebooks/SAE15/web/data/' + filename +'.svg')\n","    # affichage forçé\n","    plt.show()\n","\n","    return\n","\n","#NOM : de Castro\n","#PRENOM : Kier\n","#GROUPE : TP1A"]},{"cell_type":"code","metadata":{"id":"DMU18Dz2XbMv","colab":{"base_uri":"https://localhost:8080/","height":895},"executionInfo":{"status":"ok","timestamp":1704118488976,"user_tz":-60,"elapsed":1198,"user":{"displayName":"Kier","userId":"08659815375495109439"}},"outputId":"26a8fb5a-64d0-470b-82b6-4f72efe9c34d"},"source":[],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["      id des stations                              nom  latitude la station  \\\n","0           213688169    Benjamin Godard - Victor Hugo            48.865983   \n","1           653222953        Mairie de Rosny-sous-Bois            48.871257   \n","2         17278902806       Rouget de L'isle - Watteau            48.778193   \n","3               36255               Toudouze - Clauzel            48.879296   \n","4            37815204                  Mairie du 12ème            48.840855   \n","...               ...                              ...                  ...   \n","1466        121086415         Colisée - Champs-Elysées            48.870475   \n","1467       1062742831  Place Joffre - Frédéric le Play            48.853754   \n","1468        128915891      Octave Gréard - Tour Eiffel            48.856503   \n","1469        213687475                   Traktir - Foch            48.872755   \n","1470        516395829    Quai des Célestins - Henri IV            48.851297   \n","\n","      longitude de la station  nombres bornettes dans la station  \\\n","0                    2.275725                                 35   \n","1                    2.486581                                 30   \n","2                    2.396302                                 20   \n","3                    2.337360                                 21   \n","4                    2.387555                                 30   \n","...                       ...                                ...   \n","1466                 2.307619                                 24   \n","1467                 2.304424                                 38   \n","1468                 2.293179                                 33   \n","1469                 2.291550                                 22   \n","1470                 2.362453                                 14   \n","\n","     code de la station methode de location  nombre de vélos dispo  \\\n","0                 16107                 NaN                      4   \n","1                 31104        [CREDITCARD]                     25   \n","2                 44015                 NaN                      5   \n","3                  9020        [CREDITCARD]                      6   \n","4                 12109                 NaN                     12   \n","...                 ...                 ...                    ...   \n","1466               8039        [CREDITCARD]                      2   \n","1467               7109        [CREDITCARD]                      5   \n","1468               7025        [CREDITCARD]                      6   \n","1469              16103        [CREDITCARD]                      2   \n","1470               4005        [CREDITCARD]                     11   \n","\n","      nombre de vélos dispo       nombre de type de vélos dispo  \\\n","0                         4   [{'mechanical': 3}, {'ebike': 1}]   \n","1                        25  [{'mechanical': 9}, {'ebike': 16}]   \n","2                         5   [{'mechanical': 0}, {'ebike': 5}]   \n","3                         6   [{'mechanical': 1}, {'ebike': 5}]   \n","4                        12   [{'mechanical': 9}, {'ebike': 3}]   \n","...                     ...                                 ...   \n","1466                      2   [{'mechanical': 0}, {'ebike': 2}]   \n","1467                      5   [{'mechanical': 1}, {'ebike': 4}]   \n","1468                      6   [{'mechanical': 1}, {'ebike': 5}]   \n","1469                      2   [{'mechanical': 0}, {'ebike': 2}]   \n","1470                     11  [{'mechanical': 10}, {'ebike': 1}]   \n","\n","      nombre de stands disponibles  nombre de stands disponibles  \\\n","0                               31                            31   \n","1                                5                             5   \n","2                               15                            15   \n","3                               14                            14   \n","4                               18                            18   \n","...                            ...                           ...   \n","1466                            15                            15   \n","1467                            33                            33   \n","1468                            27                            27   \n","1469                            20                            20   \n","1470                             1                             1   \n","\n","      station a déjà été déployée  station peut il recevoir des velos   \\\n","0                               1                                    1   \n","1                               1                                    1   \n","2                               1                                    1   \n","3                               1                                    1   \n","4                               1                                    1   \n","...                           ...                                  ...   \n","1466                            1                                    1   \n","1467                            1                                    1   \n","1468                            1                                    1   \n","1469                            1                                    1   \n","1470                            1                                    1   \n","\n","      velos en cours de location  date de maj stations  \n","0                              1            1704114655  \n","1                              1            1704115085  \n","2                              1            1704114714  \n","3                              1            1704115086  \n","4                              1            1704114999  \n","...                          ...                   ...  \n","1466                           1            1704114583  \n","1467                           1            1704114935  \n","1468                           1            1704115016  \n","1469                           1            1704114869  \n","1470                           1            1704114783  \n","\n","[1471 rows x 16 columns]"],"text/html":["\n","  <div id=\"df-635ad5df-66b9-479c-9e25-da42209ef3a2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id des stations</th>\n","      <th>nom</th>\n","      <th>latitude la station</th>\n","      <th>longitude de la station</th>\n","      <th>nombres bornettes dans la station</th>\n","      <th>code de la station</th>\n","      <th>methode de location</th>\n","      <th>nombre de vélos dispo</th>\n","      <th>nombre de vélos dispo</th>\n","      <th>nombre de type de vélos dispo</th>\n","      <th>nombre de stands disponibles</th>\n","      <th>nombre de stands disponibles</th>\n","      <th>station a déjà été déployée</th>\n","      <th>station peut il recevoir des velos</th>\n","      <th>velos en cours de location</th>\n","      <th>date de maj stations</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>213688169</td>\n","      <td>Benjamin Godard - Victor Hugo</td>\n","      <td>48.865983</td>\n","      <td>2.275725</td>\n","      <td>35</td>\n","      <td>16107</td>\n","      <td>NaN</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>[{'mechanical': 3}, {'ebike': 1}]</td>\n","      <td>31</td>\n","      <td>31</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704114655</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>653222953</td>\n","      <td>Mairie de Rosny-sous-Bois</td>\n","      <td>48.871257</td>\n","      <td>2.486581</td>\n","      <td>30</td>\n","      <td>31104</td>\n","      <td>[CREDITCARD]</td>\n","      <td>25</td>\n","      <td>25</td>\n","      <td>[{'mechanical': 9}, {'ebike': 16}]</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704115085</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>17278902806</td>\n","      <td>Rouget de L'isle - Watteau</td>\n","      <td>48.778193</td>\n","      <td>2.396302</td>\n","      <td>20</td>\n","      <td>44015</td>\n","      <td>NaN</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>[{'mechanical': 0}, {'ebike': 5}]</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704114714</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>36255</td>\n","      <td>Toudouze - Clauzel</td>\n","      <td>48.879296</td>\n","      <td>2.337360</td>\n","      <td>21</td>\n","      <td>9020</td>\n","      <td>[CREDITCARD]</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>[{'mechanical': 1}, {'ebike': 5}]</td>\n","      <td>14</td>\n","      <td>14</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704115086</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>37815204</td>\n","      <td>Mairie du 12ème</td>\n","      <td>48.840855</td>\n","      <td>2.387555</td>\n","      <td>30</td>\n","      <td>12109</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>12</td>\n","      <td>[{'mechanical': 9}, {'ebike': 3}]</td>\n","      <td>18</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704114999</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>121086415</td>\n","      <td>Colisée - Champs-Elysées</td>\n","      <td>48.870475</td>\n","      <td>2.307619</td>\n","      <td>24</td>\n","      <td>8039</td>\n","      <td>[CREDITCARD]</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>[{'mechanical': 0}, {'ebike': 2}]</td>\n","      <td>15</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704114583</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>1062742831</td>\n","      <td>Place Joffre - Frédéric le Play</td>\n","      <td>48.853754</td>\n","      <td>2.304424</td>\n","      <td>38</td>\n","      <td>7109</td>\n","      <td>[CREDITCARD]</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>[{'mechanical': 1}, {'ebike': 4}]</td>\n","      <td>33</td>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704114935</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>128915891</td>\n","      <td>Octave Gréard - Tour Eiffel</td>\n","      <td>48.856503</td>\n","      <td>2.293179</td>\n","      <td>33</td>\n","      <td>7025</td>\n","      <td>[CREDITCARD]</td>\n","      <td>6</td>\n","      <td>6</td>\n","      <td>[{'mechanical': 1}, {'ebike': 5}]</td>\n","      <td>27</td>\n","      <td>27</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704115016</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>213687475</td>\n","      <td>Traktir - Foch</td>\n","      <td>48.872755</td>\n","      <td>2.291550</td>\n","      <td>22</td>\n","      <td>16103</td>\n","      <td>[CREDITCARD]</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>[{'mechanical': 0}, {'ebike': 2}]</td>\n","      <td>20</td>\n","      <td>20</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704114869</td>\n","    </tr>\n","    <tr>\n","      <th>1470</th>\n","      <td>516395829</td>\n","      <td>Quai des Célestins - Henri IV</td>\n","      <td>48.851297</td>\n","      <td>2.362453</td>\n","      <td>14</td>\n","      <td>4005</td>\n","      <td>[CREDITCARD]</td>\n","      <td>11</td>\n","      <td>11</td>\n","      <td>[{'mechanical': 10}, {'ebike': 1}]</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1704114783</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1471 rows × 16 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-635ad5df-66b9-479c-9e25-da42209ef3a2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-635ad5df-66b9-479c-9e25-da42209ef3a2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-635ad5df-66b9-479c-9e25-da42209ef3a2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dd318582-6118-4515-bfd3-82748c673b27\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd318582-6118-4515-bfd3-82748c673b27')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dd318582-6118-4515-bfd3-82748c673b27 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<_io.TextIOWrapper name='dataframe.html' mode='w' encoding='UTF-8'>"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"Dc-5FLoDPI54"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Uh_VEWOSJ9FP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"oHx0DAgNJDGy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"qyuVvmw0JDKi"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"status":"ok","timestamp":1703610138255,"user_tz":-60,"elapsed":227,"user":{"displayName":"Kier","userId":"08659815375495109439"}},"colab":{"base_uri":"https://localhost:8080/","height":300},"outputId":"b107ec92-aa95-4216-e6bd-21ccacfcd52b","id":"PSQ1WdjkFOZT"},"outputs":[{"output_type":"display_data","data":{"text/plain":["       temperature\n","count     5.000000\n","mean     26.400000\n","std       3.110466\n","min      22.000000\n","25%      25.000000\n","50%      26.500000\n","75%      28.500000\n","max      30.000000"],"text/html":["\n","  <div id=\"df-aabd5dd8-29a6-418f-8d43-77ad7e170a6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>temperature</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>26.400000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>3.110466</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>22.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>25.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>26.500000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>28.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>30.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aabd5dd8-29a6-418f-8d43-77ad7e170a6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aabd5dd8-29a6-418f-8d43-77ad7e170a6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aabd5dd8-29a6-418f-8d43-77ad7e170a6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1671fc3e-7423-4fc8-8f4a-87edeb0a1258\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1671fc3e-7423-4fc8-8f4a-87edeb0a1258')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1671fc3e-7423-4fc8-8f4a-87edeb0a1258 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{}}],"source":[]},{"cell_type":"code","source":[],"metadata":{"id":"esYun47u2lCp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Kmc8wkSq1waG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["NOM : de Castro\n","PRENOM : Kier\n","GROUPE : TP1A\n"],"metadata":{"id":"yzjOqzTzoelL"}},{"cell_type":"markdown","source":[],"metadata":{"id":"D23XBRCxoqgx"}}]}